name: Weekly Post Generator

on:
  schedule:
    - cron: '0 12 * * 1'  # Runs every Monday at 12:00 UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  generate-post:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Weekly-Post repo
      uses: actions/checkout@v4
      with:
        repository: clintjb/Weekly-Post
        path: Weekly-Post

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd Weekly-Post
        pip install -r requirements.txt

    - name: Create tone.txt file
      run: |
        cd Weekly-Post
        mkdir -p input
        cat > input/tone.txt << 'EOF'
        # Add your writing style example here
        # This should be a sample of your writing that the AI will mimic
        # Replace this with actual content that represents your voice/style
        I love diving into tech topics that make me think differently about the world. 
        When I write, I try to keep things conversational but thoughtful - like I'm 
        explaining something interesting to a friend over coffee. I don't shy away 
        from complexity, but I always aim to make it accessible.
        EOF

    - name: Run article.py to grab the Hacker News post
      run: |
        cd Weekly-Post
        python article.py

    - name: Run generate.py to generate the Jekyll post
      env:
        API_KEY: ${{ secrets.LLM_API_KEY }}
      run: |
        cd Weekly-Post
        python generate.py

    - name: Checkout target blog repo
      uses: actions/checkout@v4
      with:
        repository: clintjb/clintjb.github.io
        path: blog-repo
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Copy generated files to website
      run: |
        mkdir -p blog-repo/images/posts/2025/
        cp Weekly-Post/input/weekly.jpg blog-repo/images/posts/2025/
        cp Weekly-Post/2025-04-24-hacker-news-post.md blog-repo/_posts/2025/

    - name: Commit and push to blog repo
      run: |
        cd blog-repo
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Weekly HN Blog Post Update"
          git push
        fi
